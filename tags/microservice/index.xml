<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservice on 北野</title>
    <link>https://alimy.github.io/tags/microservice/</link>
    <description>Recent content in Microservice on 北野</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;2018, Alimy; all rights reserved.</copyright>
    <lastBuildDate>Sun, 28 Jan 2024 16:30:00 +0800</lastBuildDate><atom:link href="https://alimy.github.io/tags/microservice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kitex: Thrift-HTTP 映射的 IDL 规范</title>
      <link>https://alimy.github.io/post/dev_202401281630/</link>
      <pubDate>Sun, 28 Jan 2024 16:30:00 +0800</pubDate>
      
      <guid>https://alimy.github.io/post/dev_202401281630/</guid>
      <description>&lt;p&gt;本规范是 &lt;code&gt;Thrift&lt;/code&gt; 与 &lt;code&gt;HTTP&lt;/code&gt; 接口映射的 IDL 定义标准，包括服务、接口以及请求 &lt;code&gt;request&lt;/code&gt;、&lt;code&gt;response&lt;/code&gt; 参数定义规范和错误码定义规范。Kitex 部分实现了该规范，注解说明有标注支持情况。&lt;/p&gt;
&lt;h3 id=&#34;规范说明&#34;&gt;规范说明&lt;/h3&gt;
&lt;p&gt;（1）本规范采用注解方式来描述接口信息，包括接口的 &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; 以及接口请求参数，返回参数位置（如 &lt;code&gt;header&lt;/code&gt;，&lt;code&gt;cookie&lt;/code&gt; )、名称等信息&lt;/p&gt;
&lt;p&gt;（2）本规范所述注解采用 &lt;code&gt;api.{key}={value}&lt;/code&gt; 的形式，其中&lt;code&gt;key&lt;/code&gt;通常用于指定该字段出现的位置如（&lt;code&gt;header&lt;/code&gt;，&lt;code&gt;cookie&lt;/code&gt;，&lt;code&gt;query&lt;/code&gt;，&lt;code&gt;body&lt;/code&gt; 等), &lt;code&gt;value&lt;/code&gt; 用于指定该字段在对应位置的实际名称, 一些功能性注解（如&lt;code&gt;api.none&lt;/code&gt;, &lt;code&gt;api.js_conv&lt;/code&gt;, &lt;code&gt;api.http_code&lt;/code&gt;) 除外&lt;/p&gt;
&lt;p&gt;（3）本规范中定义的IDL注解如 &lt;code&gt;api.get&lt;/code&gt;, &lt;code&gt;api.header&lt;/code&gt; 等，只支持小写，不支持大写或者大小写混用如&lt;code&gt;api.GET&lt;/code&gt;, &lt;code&gt;api.Header&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;文件整体规范&#34;&gt;文件整体规范&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一个服务 service 对应一个 thrift 主文件，主文件里的 &lt;code&gt;method&lt;/code&gt; 都是针对当前服务对应接口，主文件可以引用其它 thrift 文件定义&lt;/li&gt;
&lt;li&gt;每个 &lt;code&gt;Method&lt;/code&gt; 原则上对应一个 &lt;code&gt;Request&lt;/code&gt; 和 &lt;code&gt;Response&lt;/code&gt; 定义&lt;/li&gt;
&lt;li&gt;原则上不建议 &lt;code&gt;Request&lt;/code&gt; 复用，可以复用 &lt;code&gt;Response&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
