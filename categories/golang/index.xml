<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on 北野</title>
    <link>https://alimy.github.io/categories/golang/</link>
    <description>Recent content in Golang on 北野</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;2018, Alimy; all rights reserved.</copyright>
    <lastBuildDate>Sat, 03 Mar 2018 19:34:00 +0800</lastBuildDate><atom:link href="https://alimy.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang Tutorial: What&#39;s DefaultServeMux in net/http</title>
      <link>https://alimy.github.io/post/dev_201803031932/</link>
      <pubDate>Sat, 03 Mar 2018 19:34:00 +0800</pubDate>
      
      <guid>https://alimy.github.io/post/dev_201803031932/</guid>
      <description>&lt;p&gt;craete a HTTPS Server use net/http and route handle function by DefaultServeMux, see code below:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package main

import (
	&amp;#34;net/http&amp;#34;
	&amp;#34;fmt&amp;#34;
	&amp;#34;log&amp;#34;
)

func hello(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, &amp;#34;[%s]: hello!&amp;#34;, r.Host)
}

func world(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, &amp;#34;[%s]: world!&amp;#34;, r.Host)
}

func main() {
	server := http.Server{
		Addr: &amp;#34;127.0.0.1:8080&amp;#34;,
	}
	http.HandleFunc(&amp;#34;/hello&amp;#34;, hello)
	http.HandleFunc(&amp;#34;/world&amp;#34;, world)

	log.Fatal(server.ListenAndServe())
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Golang Tutorial: Create HTTPS Server use net/http</title>
      <link>https://alimy.github.io/post/dev_201803030946/</link>
      <pubDate>Sat, 03 Mar 2018 09:46:00 +0800</pubDate>
      
      <guid>https://alimy.github.io/post/dev_201803030946/</guid>
      <description>&lt;p&gt;It is simple to craete a HTTPS Server use net/http, see code below:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package main

import (
	&amp;#34;net/http&amp;#34;
	&amp;#34;fmt&amp;#34;
)

type SimpleHandler struct {
	Name string
}

func (h *SimpleHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, &amp;#34;%s: Hello World!&amp;#34;, h.Name)
}

func main() {
	server := http.Server{
		Addr:    &amp;#34;127.0.0.1:8080&amp;#34;,
		Handler: &amp;amp;SimpleHandler{Name: &amp;#34;SimpleServer&amp;#34;},
	}
	server.ListenAndServeTLS(&amp;#34;cert.pem&amp;#34;, &amp;#34;key.pem&amp;#34;)
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
